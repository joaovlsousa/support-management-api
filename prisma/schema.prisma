// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  name      String
  email     String   @unique
  password  String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  clients  Client[]
  supports Support[]

  @@map("users")
}

model Client {
  id        String     @id @default(cuid())
  name      String
  role      ClientRole
  createdAt DateTime   @default(now()) @map("created_at")
  updatedAt DateTime   @updatedAt @map("updated_at")

  userId   String    @map("user_id")
  user     User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  address  Address?
  supports Support[]

  @@map("clients")
}

model Address {
  id       String @id @default(cuid())
  city     String
  street   String
  number   Int
  clientId String @unique @map("client_id")
  client   Client @relation(fields: [clientId], references: [id], onDelete: Cascade)

  @@map("address")
}

model Support {
  id          String   @id @default(cuid())
  title       String
  description String   @db.Text()
  priority    Priority
  status      Status   @default(OPEN)
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  clientId String @map("client_id")
  client   Client @relation(fields: [clientId], references: [id], onDelete: Cascade)

  userId String @map("user_id")
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("supports")
}

enum ClientRole {
  PEOPLE
  COMPANY
}

enum Priority {
  HIGH
  MEDIUM
  LOW
}

enum Status {
  OPEN
  FINISHED
}
